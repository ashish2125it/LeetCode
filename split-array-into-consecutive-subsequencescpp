class Solution {
public:
bool solve(int i,int n,int prev1,int prev2,int cnt1,int cnt2,vector<int>&nums)
{
    if(i>=n)
    {
        if(cnt1>=3 && cnt2>=3) return 1;
        return 0;
    }

    
    bool c1 = false,c2 = false;
    if(prev1==-1 && prev2==-1)
    {
       c1= solve(i+1,n,nums[i],prev2,cnt1+1,cnt2,nums);
       c2= solve(i+1,n,prev1,nums[i],cnt1,cnt2+1,nums);
    }
    else if(prev1==-1)
    {
        c1= solve(i+1,n,nums[i],prev2,cnt1+1,cnt2,nums);
         if(prev2+1==nums[i])
        c2= solve(i+1,n,prev1,nums[i],cnt1,cnt2+1,nums);
    }
    else if(prev2==-1)
    {
       c1 = solve(i+1,n,prev1,nums[i],cnt1,cnt2+1,nums);
        if(prev1+1==nums[i])
       c2=  solve(i+1,n,nums[i],prev2,cnt1+1,cnt2,nums);
    }
    else
    {
        if(prev1+1==nums[i])
       c1= solve(i+1,n,nums[i],prev2,cnt1+1,cnt2,nums);
        if(prev2+1==nums[i])
        c2= solve(i+1,n,prev1,nums[i],cnt1,cnt2+1,nums);
        

    }

    return c1 || c2;

}
    bool isPossible(vector<int>& nums) {
    int n = nums.size();
    return solve(0,n,-1,-1,0,0,nums);
    }
};